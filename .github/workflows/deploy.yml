name: Deploy Website to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'  # Only trigger when changes are made in the docs directory
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        working-directory: ./docs
        run: pnpm install --no-frozen-lockfile
      
      - name: Check Next.js configuration
        working-directory: ./docs
        run: |
          echo "Examining Next.js configuration..."
          if grep -q "output: 'export'" custom-next.config.mjs; then
            echo "Static export detected in Next.js config"
          else
            echo "Warning: 'output: export' not found in Next.js config"
          fi

      - name: Build site
        working-directory: ./docs
        run: pnpm build
      
      - name: Detailed directory inspection
        working-directory: ./docs
        run: |
          echo "=== Root directory contents ==="
          ls -la
          echo ""
          
          echo "=== Check for .next directory ==="
          if [ -d ".next" ]; then
            echo ".next directory exists"
            echo "Contents of .next:"
            ls -la .next
          else
            echo ".next directory not found"
          fi
          
          echo ""
          echo "=== Check for out directory ==="
          if [ -d "out" ]; then
            echo "out directory exists"
            echo "Contents of out:"
            ls -la out
            
            echo ""
            echo "Checking for index.html in out:"
            if [ -f "out/index.html" ]; then
              echo "index.html exists in out directory"
              echo "BUILD_OUTPUT_DIR=out" >> $GITHUB_ENV
            else
              echo "WARNING: index.html NOT found in out directory!"
            fi
          else
            echo "out directory not found"
          fi
      
      - name: Determine build output directory
        working-directory: ./docs
        run: |
          # If we haven't set BUILD_OUTPUT_DIR yet, try to determine it
          if [ -z "${{ env.BUILD_OUTPUT_DIR }}" ]; then
            if [ -d "out" ] && [ -f "out/index.html" ]; then
              echo "BUILD_OUTPUT_DIR=out" >> $GITHUB_ENV
            elif [ -d ".next/static" ]; then
              echo "BUILD_OUTPUT_DIR=.next" >> $GITHUB_ENV
            else
              echo "Could not automatically determine build output directory"
              echo "Defaulting to repository root"
              echo "BUILD_OUTPUT_DIR=." >> $GITHUB_ENV
            fi
          fi
          
          echo "Selected build output directory: ${{ env.BUILD_OUTPUT_DIR }}"
      
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
      
      - name: Prepare CNAME and verify deployment files
        working-directory: ./docs
        run: |
          # Ensure CNAME file exists in the build output
          if [ -f "public/CNAME" ]; then
            echo "Copying CNAME file to ${{ env.BUILD_OUTPUT_DIR }}"
            cp public/CNAME ${{ env.BUILD_OUTPUT_DIR }}/
          else
            echo "Creating CNAME file with cdn.zenyhosting.cloud"
            echo "cdn.zenyhosting.cloud" > ${{ env.BUILD_OUTPUT_DIR }}/CNAME
          fi
          
          # Check if index.html exists in the build output
          if [ ! -f "${{ env.BUILD_OUTPUT_DIR }}/index.html" ]; then
            echo "WARNING: index.html not found in ${{ env.BUILD_OUTPUT_DIR }}!"
            
            # If we're using the .next directory and there's no index.html, we need to create one
            if [ "${{ env.BUILD_OUTPUT_DIR }}" == ".next" ]; then
              echo "Creating basic index.html for .next deployment"
              echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0;url=/_next/static/chunks/pages/index.html"></head><body>Redirecting...</body></html>' > ${{ env.BUILD_OUTPUT_DIR }}/index.html
            fi
          fi
          
          echo "Final contents of build directory:"
          ls -la ${{ env.BUILD_OUTPUT_DIR }}
      
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/${{ env.BUILD_OUTPUT_DIR }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 