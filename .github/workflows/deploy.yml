name: Deploy Website to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'  # Only trigger when changes are made in the docs directory
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      
      - name: Install dependencies
        working-directory: ./docs
        run: pnpm install --no-frozen-lockfile
      
      - name: Build site
        working-directory: ./docs
        run: pnpm build
      
      - name: Check build output directory
        working-directory: ./docs
        run: |
          echo "Listing build output directories:"
          ls -la
          echo ""
          echo "Checking for Next.js output directories:"
          if [ -d "out" ]; then
            echo "Found 'out' directory"
            echo "BUILD_OUTPUT_DIR=out" >> $GITHUB_ENV
          elif [ -d ".next" ]; then
            echo "Found '.next' directory"
            echo "BUILD_OUTPUT_DIR=.next" >> $GITHUB_ENV
          elif [ -d ".next/standalone" ]; then
            echo "Found '.next/standalone' directory"
            echo "BUILD_OUTPUT_DIR=.next/standalone" >> $GITHUB_ENV
          else
            echo "Could not find expected build output directory"
            exit 1
          fi
      
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v4
      
      - name: Copy CNAME to output directory
        working-directory: ./docs
        run: |
          if [ -f "public/CNAME" ]; then
            echo "Copying CNAME file to ${{ env.BUILD_OUTPUT_DIR }}"
            mkdir -p ${{ env.BUILD_OUTPUT_DIR }}
            cp public/CNAME ${{ env.BUILD_OUTPUT_DIR }}/
          else
            echo "CNAME file not found in public directory"
            echo "cdn.zenyhosting.cloud" > ${{ env.BUILD_OUTPUT_DIR }}/CNAME
            echo "Created CNAME file with cdn.zenyhosting.cloud"
          fi
      
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/${{ env.BUILD_OUTPUT_DIR }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 