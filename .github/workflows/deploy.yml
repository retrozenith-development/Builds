name: Deploy Next.js to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - 'docs/**'  # Only trigger when changes are made in the docs directory

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Restore Next.js cache
        uses: actions/cache@v4
        with:
          path: |
            docs/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('docs/pnpm-lock.yaml') }}-${{ hashFiles('docs/**.[jt]s', 'docs/**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('docs/pnpm-lock.yaml') }}-

      - name: Install dependencies
        working-directory: ./docs
        run: pnpm install

      - name: Build with Next.js
        working-directory: ./docs
        run: pnpm build

      - name: Prepare static files for GitHub Pages
        working-directory: ./docs
        run: |
          # Create .nojekyll file to disable Jekyll processing
          touch out/.nojekyll
          
          # Add CNAME file for custom domain
          echo "cdn.zenyhosting.cloud" > out/CNAME
          
          # Display contents of out directory
          echo "Contents of output directory:"
          ls -la out/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 