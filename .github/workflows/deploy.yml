name: Build and Deploy Docker Image

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    paths:
      - 'docs/**'  # Only trigger when changes are made in the docs directory

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/retrozenith-builds
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            latest
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./docs
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # You can add a deployment job for your specific hosting environment
  # Examples for common hosting platforms are included below
  
  # Example for deploying to a server via SSH
  # deploy-ssh:
  #   runs-on: ubuntu-latest
  #   needs: docker
  #   steps:
  #     - name: Deploy via SSH
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         script: |
  #           docker pull ghcr.io/${{ github.repository }}/retrozenith-builds:latest
  #           docker-compose -f /path/to/docker-compose.yml up -d

  # Example for deploying to a cloud platform like Digital Ocean App Platform
  # deploy-digital-ocean:
  #   runs-on: ubuntu-latest
  #   needs: docker
  #   steps:
  #     - name: Install doctl
  #       uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  #     
  #     - name: Update deployment
  #       run: doctl apps update ${{ secrets.DIGITALOCEAN_APP_ID }} --spec /path/to/app-spec.yaml 